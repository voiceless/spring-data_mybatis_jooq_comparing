/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables;

import jooq.generated.Keys;
import jooq.generated.Public;
import jooq.generated.tables.records.FeedinstanceexceptionRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Feedinstanceexception extends org.jooq.impl.TableImpl<FeedinstanceexceptionRecord> {

	private static final long serialVersionUID = 80846309;

	/**
	 * The singleton instance of <code>public.feedinstanceexception</code>
	 */
	public static final Feedinstanceexception FEEDINSTANCEEXCEPTION = new Feedinstanceexception();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FeedinstanceexceptionRecord> getRecordType() {
		return FeedinstanceexceptionRecord.class;
	}

	/**
	 * The column <code>public.feedinstanceexception.id</code>.
	 */
	public final org.jooq.TableField<FeedinstanceexceptionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.feedinstanceexception.feedinstanceid</code>.
	 */
	public final org.jooq.TableField<FeedinstanceexceptionRecord, Long> FEEDINSTANCEID = createField("feedinstanceid", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>public.feedinstanceexception.description</code>.
	 */
	public final org.jooq.TableField<FeedinstanceexceptionRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

	/**
	 * Create a <code>public.feedinstanceexception</code> table reference
	 */
	public Feedinstanceexception() {
		this("feedinstanceexception", null);
	}

	/**
	 * Create an aliased <code>public.feedinstanceexception</code> table reference
	 */
	public Feedinstanceexception(String alias) {
		this(alias, Feedinstanceexception.FEEDINSTANCEEXCEPTION);
	}

	private Feedinstanceexception(String alias, org.jooq.Table<FeedinstanceexceptionRecord> aliased) {
		this(alias, aliased, null);
	}

	private Feedinstanceexception(String alias, org.jooq.Table<FeedinstanceexceptionRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<FeedinstanceexceptionRecord, Long> getIdentity() {
		return Keys.IDENTITY_FEEDINSTANCEEXCEPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<FeedinstanceexceptionRecord> getPrimaryKey() {
		return Keys.FEEDINSTANCEEXCEPTION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<FeedinstanceexceptionRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<FeedinstanceexceptionRecord>>asList(Keys.FEEDINSTANCEEXCEPTION_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<FeedinstanceexceptionRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<FeedinstanceexceptionRecord, ?>>asList(Keys.FEEDINSTANCEEXCEPTION__FEEDINSTANCEEXCEPTION_FEEDINSTANCEID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Feedinstanceexception as(String alias) {
		return new Feedinstanceexception(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Feedinstanceexception rename(String name) {
		return new Feedinstanceexception(name, null);
	}
}
