/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables;

import jooq.generated.Keys;
import jooq.generated.Public;
import jooq.generated.tables.records.FeedinstanceRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Feedinstance extends org.jooq.impl.TableImpl<FeedinstanceRecord> {

	private static final long serialVersionUID = 179566513;

	/**
	 * The singleton instance of <code>public.feedinstance</code>
	 */
	public static final Feedinstance FEEDINSTANCE = new Feedinstance();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FeedinstanceRecord> getRecordType() {
		return FeedinstanceRecord.class;
	}

	/**
	 * The column <code>public.feedinstance.id</code>.
	 */
	public final org.jooq.TableField<FeedinstanceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.feedinstance.feedid</code>.
	 */
	public final org.jooq.TableField<FeedinstanceRecord, Long> FEEDID = createField("feedid", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>public.feedinstance.date</code>.
	 */
	public final org.jooq.TableField<FeedinstanceRecord, java.sql.Timestamp> DATE = createField("date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>public.feedinstance.description</code>.
	 */
	public final org.jooq.TableField<FeedinstanceRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(400), this, "");

	/**
	 * Create a <code>public.feedinstance</code> table reference
	 */
	public Feedinstance() {
		this("feedinstance", null);
	}

	/**
	 * Create an aliased <code>public.feedinstance</code> table reference
	 */
	public Feedinstance(String alias) {
		this(alias, Feedinstance.FEEDINSTANCE);
	}

	private Feedinstance(String alias, org.jooq.Table<FeedinstanceRecord> aliased) {
		this(alias, aliased, null);
	}

	private Feedinstance(String alias, org.jooq.Table<FeedinstanceRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<FeedinstanceRecord, Long> getIdentity() {
		return Keys.IDENTITY_FEEDINSTANCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<FeedinstanceRecord> getPrimaryKey() {
		return Keys.FEEDINSTANCE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<FeedinstanceRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<FeedinstanceRecord>>asList(Keys.FEEDINSTANCE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<FeedinstanceRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<FeedinstanceRecord, ?>>asList(Keys.FEEDINSTANCE__FEEDINSTANCE_FEEDID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Feedinstance as(String alias) {
		return new Feedinstance(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Feedinstance rename(String name) {
		return new Feedinstance(name, null);
	}
}
